{"version":3,"sources":["Navbar.js","MakeOfferForm.js","BuyOrders.js","SellOrders.js","TradingHistory.js","MakeListingForm.js","Asset.js","Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","AppBar","position","Toolbar","Typography","color","variant","component","Link","to","useStyles","makeStyles","theme","input","marginBottom","spacing","MakeOfferForm","open","onClose","data","classes","useState","form","setForm","handleSubmit","a","window","ethereum","request","method","accounts","seaport","OpenSeaPort","networkName","Network","Main","createBuyOrder","asset","tokenId","tokenAddress","schemaName","accountAddress","startAmount","price","expirationTime","Math","round","Date","now","referrerAddress","Dialog","DialogTitle","DialogContent","TextField","fullWidth","className","label","name","helperText","onChange","event","target","value","DialogActions","Button","onClick","container","table","BuyOrders","setOpen","Table","TableHead","TableRow","TableCell","TableBody","buyOrders","map","order","Web3","fromWei","basePrice","toString","maker","hash","SellOrders","handleBuy","api","getOrder","side","OrderSide","sell","fulfillOrder","sellOrders","size","TradingHistory","orders","taker","createdTime","MakeListingForm","handleChange","createSellOrder","endAmount","marginTop","image","info","actions","marginRight","loading","textAlign","Asset","useParams","setData","balance","useEffect","getAsset","console","log","Object","keys","length","Container","maxWidth","Grid","item","src","imagePreviewUrl","gutterBottom","owner","user","username","href","openseaLink","media","height","Home","history","useHistory","index","xs","sm","md","lg","Card","CardActionArea","push","CardMedia","CardContent","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd843e52.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <Typography color=\"inherit\" variant=\"h6\" component={Link} to=\"/\">\n          TINYNFT\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar\n","import React, {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { OpenSeaPort, Network } from 'opensea-js'\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    marginBottom: theme.spacing(2)\n  }\n}))\n\nconst MakeOfferForm = ({open, onClose, data}) => {\n  const classes = useStyles()\n  const [form, setForm] = useState({})\n\n  const handleChange = event => {\n    const name = event.target.name\n    const value = event.target.value\n    setForm({...form, [name]:value})\n  }\n\n  const handleSubmit = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    })\n    const seaport = new OpenSeaPort(window.ethereum, {\n      networkName: Network.Main\n    })\n    const referrerAddress = '0x9d280d898BcBfd84656c36d18a82D5BaeF54020C'\n    const offer = await seaport.createBuyOrder({\n      asset: {\n        tokenId: data.tokenId,\n        tokenAddress: data.tokenAddress,\n        schemaName: 'ERC1155'\n      },\n      accountAddress: accounts[0],\n      startAmount: form.price,\n      expirationTime: Math.round(Date.now()/1000 + 60*60*24),\n      referrerAddress\n    })\n    onClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Make Offer</DialogTitle>\n      <DialogContent>\n        {/*\n        <TextField fullWidth\n          className={classes.input}\n          variant=\"outlined\"\n          label=\"Count\"\n          name=\"count\"\n          onChange={handleChange}\n          value={form.count}\n          />*/}\n        <TextField fullWidth\n          className={classes.input}\n          variant=\"outlined\"\n          label=\"Price\"\n          name=\"price\"\n          helperText=\"unit: ETH\"\n          onChange={handleChange}\n          value={form.price}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={handleSubmit} color=\"primary\">Submit</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default MakeOfferForm\n","import React, { useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as Web3 from 'web3'\nimport MakeOfferForm from './MakeOfferForm'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginBottom: theme.spacing(3)\n  },\n  table: {\n    marginBottom: theme.spacing(2)\n  }\n}))\n\nconst BuyOrders = ({data}) => {\n  const classes = useStyles()\n  const [open, setOpen] = useState(false)\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <div className={classes.container}>\n      <Typography variant=\"h6\" component=\"h5\">Offers</Typography>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Price</TableCell>\n            <TableCell>Expiration</TableCell>\n            <TableCell>From</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.buyOrders.map(order => (\n            <TableRow key={order.hash}>\n              <TableCell>{Web3.utils.fromWei(order.basePrice.toString())}</TableCell>\n              <TableCell>{order.expirationTime.toString()}</TableCell>\n              <TableCell>{order.maker}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <Button\n        color=\"primary\"\n        onClick={()=>setOpen(true)}\n        variant=\"outlined\">Make Offer</Button>\n      <MakeOfferForm\n        data={data}\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  )\n}\n\nexport default BuyOrders\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as Web3 from 'web3'\nimport { OpenSeaPort, Network } from 'opensea-js'\nimport { OrderSide } from 'opensea-js/lib/types'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginBottom: theme.spacing(3)\n  }\n}))\n\nconst SellOrders = ({data}) => {\n  const classes = useStyles()\n\n  const handleBuy = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    })\n    const seaport = new OpenSeaPort(window.ethereum, {\n      networkName: Network.Main\n    })\n    const order = await seaport.api.getOrder({side:OrderSide.sell})\n    const referrerAddress = '0x9d280d898BcBfd84656c36d18a82D5BaeF54020C'\n    const transactionHash = await seaport.fulfillOrder({\n      order,\n      accountAddress: accounts[0],\n      referrerAddress\n    })\n  }\n\n  return (\n    <div className={classes.container}>\n      <Typography variant=\"h6\" component=\"h5\">Listings</Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Price</TableCell>\n            <TableCell>Expiration</TableCell>\n            <TableCell>From</TableCell>\n            <TableCell></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.sellOrders.map(order => (\n            <TableRow key={order.hash}>\n              <TableCell>{Web3.utils.fromWei(order.basePrice.toString())}</TableCell>\n              <TableCell>{order.expirationTime.toString()}</TableCell>\n              <TableCell>{order.maker}</TableCell>\n              <TableCell>\n                <Button\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onClick={handleBuy}\n                  color=\"primary\">Buy</Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\nexport default SellOrders\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\nimport * as Web3 from 'web3'\n\nconst TradingHistory = ({data}) => {\n  return (\n    <div>\n      <Typography variant=\"h6\" component=\"h5\">Trading History</Typography>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Event</TableCell>\n            <TableCell>Price</TableCell>\n            <TableCell>From</TableCell>\n            <TableCell>To</TableCell>\n            <TableCell>Date</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.orders.map(order => (\n            <TableRow key={order.hash}>\n              <TableCell>{order.side}</TableCell>\n              <TableCell>{Web3.utils.fromWei(order.basePrice.toString())}</TableCell>\n              <TableCell>{order.maker}</TableCell>\n              <TableCell>{order.taker}</TableCell>\n              <TableCell>{order.createdTime.toString()}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </div>\n  )\n}\n\nexport default TradingHistory\n","import React, {useState} from 'react'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { OpenSeaPort, Network } from 'opensea-js'\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    marginBottom: theme.spacing(2)\n  }\n}))\n\nconst MakeListingForm = ({open, onClose, data}) => {\n  const classes = useStyles()\n  const [form, setForm] = useState({})\n\n  const handleChange = event => {\n    const name = event.target.name\n    const value = event.target.value\n    setForm({...form, [name]:value})\n  }\n\n  const handleSubmit = async () => {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    })\n    const seaport = new OpenSeaPort(window.ethereum, {\n      networkName: Network.Main\n    })\n    const offer = await seaport.createSellOrder({\n      asset: {\n        tokenId: data.tokenId,\n        tokenAddress: data.tokenAddress,\n        schemaName: 'ERC1155'\n      },\n      accountAddress: accounts[0],\n      startAmount: form.startAmount,\n      endAmount: form.endAmount,\n      expirationTime: Math.round(Date.now()/1000 + 60*60*24)\n    })\n    onClose()\n  }\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Make Offer</DialogTitle>\n      <DialogContent>\n        <TextField fullWidth\n          className={classes.input}\n          variant=\"outlined\"\n          label=\"StartAmount\"\n          name=\"startAmount\"\n          onChange={handleChange}\n          value={form.startAmount}\n        />\n        <TextField fullWidth\n          className={classes.input}\n          variant=\"outlined\"\n          label=\"EndAmount\"\n          name=\"endAmount\"\n          onChange={handleChange}\n          value={form.endAmount}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        <Button onClick={handleSubmit} color=\"primary\">Submit</Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default MakeListingForm\n","import React, {useState, useEffect} from 'react'\nimport { useParams } from 'react-router-dom'\nimport { OpenSeaPort, Network } from 'opensea-js'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport * as Web3 from 'web3'\nimport BuyOrders from './BuyOrders'\nimport SellOrders from './SellOrders'\nimport TradingHistory from './TradingHistory'\nimport MakeListingForm from './MakeListingForm'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(12),\n  },\n  image: {\n    marginBottom: theme.spacing(2)\n  },\n  info: {\n    marginBottom: theme.spacing(3)\n  },\n  actions: {\n    '& > *': {\n      marginRight: theme.spacing(1)\n    }\n  },\n  loading: {\n    marginTop: theme.spacing(15),\n    textAlign: 'center'\n  }\n}))\n\n\nconst Asset = () => {\n  const classes = useStyles()\n  const { tokenAddress, tokenId } = useParams()\n  const [data, setData] = useState({})\n  const [balance, setBalance] = useState(0)\n  const [open, setOpen] = useState(false)\n\n  useEffect(async ()=>{\n    const seaport = new OpenSeaPort(window.ethereum, {\n      networkName: Network.Main\n    })\n    const asset = await seaport.api.getAsset({\n      tokenAddress: tokenAddress,\n      tokenId: tokenId\n    })\n    console.log(asset)\n    setData(asset)\n  }, [])\n\n  // useEffect(async() => {\n  //   const seaport = new OpenSeaPort(window.ethereum, {\n  //     networkName: Network.Main\n  //   })\n  //   const accounts = await window.ethereum.request({method: 'eth_requestAccounts'})\n  //   const res = await seaport.getTokenBalance({\n  //     accountAddress: accounts[0],\n  //     tokenAddress: tokenAddress\n  //   })\n  //   setBalance(res)\n  // }, [])\n  //\n  if (Object.keys(data).length == 0) {\n    return <div className={classes.loading}>loading...</div>\n  }\n\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <Grid container spacing={3}>\n        <Grid item>\n          <img src={data.imagePreviewUrl} className={classes.image} />\n          <Typography variant=\"body1\" component=\"p\">\n            balance: {balance}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <div className={classes.info}>\n            <Typography variant=\"h4\"\n              gutterBottom\n              component=\"h1\">{data.name}</Typography>\n            <Typography gutterBottom>owner: {data.owner.user.username}</Typography>\n            <div className={classes.actions}>\n              {/**\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n              >Buy now</Button>**/}\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component=\"a\" target=\"_blank\"\n                href={data.openseaLink}>view on opensea</Button>\n              <Button color=\"primary\" variant=\"outlined\"\n                onClick={()=>setOpen(true)}>Make Listing</Button>\n            </div>\n          </div>\n          <SellOrders data={data} />\n          <BuyOrders data={data} />\n        </Grid>\n      </Grid>\n      <TradingHistory data={data} />\n      <MakeListingForm\n        open={open}\n        onClose={()=>setOpen(false)}\n        data={data}\n      />\n    </Container>\n  )\n}\n\nexport default Asset\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardActionArea from '@material-ui/core/CardActionArea'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useHistory } from 'react-router-dom'\n\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: theme.spacing(12)\n  },\n  media: {\n    height: 140\n  }\n}))\n\nconst Home = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const assets = [{\n    'name': 'GoodSleep',\n    'image': 'https://lh3.googleusercontent.com/9qNJTfmwcc1VTfDga-0CERGtfdfR0zP0c_9S0LGy-4IP-wa7GcYZOi7msn_KUJHdNeFOc-La-R8goqInaUFo8zxf0QYxMP71Iyka=s250',\n    'tokenAddress':'0x495f947276749ce646f68ac8c248420045cb7b5e',\n    'tokenId':'71083884541101485309365117973311273979808861123451377320483763788153236750337'\n  }, {\n    'name': 'Batman',\n    'image': 'https://lh3.googleusercontent.com/2qGQE_FZuqYk34JbVCSffydr9q7WmkU7PLVATDdGE_S6mVwr29jzCreACpYJHK9CN0yVeGxlu_Agd1U2pzJVyipvYDpxHp9RIdU-=s250',\n    'tokenAddress': '0x495f947276749ce646f68ac8c248420045cb7b5e',\n    'tokenId': '12510215359888036692443693821200507961939031093531727621071302247529568010241'\n  }, {\n    'name': 'Avidlines #832569532',\n    'image': 'https://lh3.googleusercontent.com/le8BPuQo7sEpYMP4gW-JepQqyBqIUne0APKszs48I9BGzGs6INM3qoGW-O7pZZ5OjKCE0Je0FW_zBmLNu6XK3MyDXW2k-rDqyayQGAk=s250',\n    'tokenAddress': '0xdfacd840f462c27b0127fc76b63e7925bed0f9d5',\n    'tokenId': '832569532'\n  }]\n  return (\n    <Container maxWidth=\"md\" className={classes.container}>\n      <Typography gutterBottom variant=\"h3\" component=\"h1\">Recommend NFT</Typography>\n      <Grid container spacing={1}>\n        {assets.map((asset, index) => (\n          <Grid item xs={12} sm={6} md={3} lg={4} key={index.toString()}>\n            <Card>\n              <CardActionArea\n                onClick={()=>history.push(`/${asset.tokenAddress}/${asset.tokenId}`)}>\n                <CardMedia\n                  className={classes.media}\n                  image={asset.image} />\n                <CardContent>\n                  <Typography\n                    variant=\"h6\"\n                    component=\"h2\"\n                  >{asset.name}</Typography>\n                </CardContent>\n              </CardActionArea>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Home\n","import { BrowserRouter  as Router, Switch, Route } from 'react-router-dom'\nimport Navbar from './Navbar'\nimport Asset from './Asset'\nimport Home from './Home'\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Switch>\n        <Route path=\"/:tokenAddress/:tokenId\">\n          <Asset />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}